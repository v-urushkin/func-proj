;; Задан набор символов и число n. Опишите функцию, которая возвращает список всех строк длины n,
;; состоящих из этих символов и не содержащих двух одинаковых символов, идущих подряд.
;; 1.4 Решите задачу с помощью элементарных операций над последовательностями и функционалов
;; map/reduce/filter 

(defn _comb_str 
  "Последовательно конкатинируем строку с последовательностью симовлов с условием,
   что последний символ строки не равен символу из последовательности.  
   ### Args
   *string*: строка;  
   *sym_seq*: последовательность символов.
  "
  [string sym_seq]
  (map (fn [elem] (str string elem))
       (filter (fn [x] (not= (str (last string)) x)) sym_seq)))


(defn _comb_seq 
  "Попарно (каждую с каждым) конкатинируем последовательность строк,
   и последовательность символов с условием, что не будет повторяющихся символов.
   ### Args
   str_seq: последовательность строк;  
   sym_seq: последовательность символов.
  "
  [str_seq sym_seq] 
  (reduce 
   concat (list) 
   (map (fn [x] (_comb_str x sym_seq)) str_seq)))
   

(defn combine_sym
  "Функция возвращает список всех строк длины n, состоящих из этих символов 
   и не содержащих двух одинаковых символов, идущих подряд.
   ### Args
   *sym_seq*: последовательность сиволов;  
   *n*: число симоволов в комбинации"
  ([sym_seq n] (combine_sym sym_seq n sym_seq))
  ([sym_seq n acc]
   (if (> n 1)
     (recur sym_seq (dec n) (_comb_seq acc sym_seq))
     acc)))

(combine_sym ["a" "b" "c"] 2)
;; => ("ab" "ac" "ba" "bc" "ca" "cb")
(combine_sym ["a" "b" "c"] 3)
;; ("aba" "abc" "aca" "acb" "bab" "bac" "bca" "bcb" "cab" "cac" "cba" "cbc")
(combine_sym ["a" "b" "c" "d"] 2)
;; => ("ab" "ac" "ad" "ba" "bc" "bd" "ca" "cb" "cd" "da" "db" "dc")
